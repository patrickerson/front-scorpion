{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/react-vm/dev/projects/freelancer/front-scorpion/src/pages/Arquivos/index.js\";\nimport { render } from '@testing-library/react';\nimport axios, { post } from 'axios';\nimport { Component } from 'react';\nimport { JSEncrypt } from 'jsencrypt';\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button, Row } from \"shards-react\";\nimport React from \"react\";\n\nclass Submit_Component extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = text => {\n      const url = \"http://192.168.5.113/decrypt.php\";\n      const formData = {\n        file: text,\n        filename: \"envioDoReact\"\n      };\n      post(url, formData).then(response => console.warn(\"result\", response));\n      document.getElementById('agf').append(text);\n    };\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById('agf').innerHTML], {\n        type: 'text/plain;charset=utf-8'\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n      console.log(document.getElementById('agf').innerHTML);\n    };\n\n    this.state = {\n      image: ''\n    };\n  }\n\n  onChange(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n\n    reader.onload = e => {\n      // 2520 : 1:31.27\n      // 5010 : 1:17.26\n      // 25200: 1:16.85\n      // 50100 : 1:16.08\n      // 100200 : 1:14.52\n      // 150300 : 1:12.89 1:17.37\n      // 200400 : 1:14.55\n      var chunkData = e.target.result.match(/.{1,150300}/g);\n      var accData = \"\";\n      chunkData.forEach(element => {\n        element.match(/.{1,501}/g).forEach(chunckedData => {\n          // chunckedData.forEach(\n          // rechunkedData=>{\n          accData += this.encryptMessage(chunckedData, `-----BEGIN RSA PRIVATE KEY-----\n                                    MIIJKgIBAAKCAgEAvQq+1cnsjqLgBO0M5B6WIVmQhd4znSoDvMK2dnG5WtgD/oFU\n                                    jzjXb2NUPfFAVW42KTOscReKKb9YMjtIZhO1Xxf48QE0sYEahiPiMSmHmALTvNhg\n                                    DBL/MsOz9k0SjxrrqVZ4d0ACYkuRltgG33eeI6sE6I6GJyXtIzyNpZxBkSS2MO3g\n                                    Il6ipUnWM/dDV4nnqiayGJfJ7oWCB8HjMdHmjV5O0Yqk0nb5dve+U/WB+5kFgfhw\n                                    Bxr4sACYGXLUa47T1U+2yxIgjKtz2R9t2WV0MkTVvjqGFH2JZf2Vn/SlcvjPh48u\n                                    ZPgapdYaR6QilNjz2ccemhRWjP5MtU5zJHNIYw5fYEQTNT7o1kP/sDdCWK1HelMH\n                                    jR4ccFv6Un72aaXKHIE/I6ABtdhlkmmbYwdQ4fi71f2lVgxbJJ3mTXgiMFOtJB7+\n                                    OQM9TngsFTzF31JLy1KUQ8zWzD5ZIIIxosvsg+wfjTLrEVRIvl9S0vKrHS0V28F/\n                                    u7ET1S9y1/hMklX50SRqw86jW4dH21O1Bvc0u50X/XwlRPgb91Q1B3mpui/t5aMr\n                                    a/PoZwaoFm16xQ8CjQhVA0rmTmd7zEg/oVlv+9dF/KwPld0ZFvy2SuwnNEtIoFiZ\n                                    LBH7WjJmJ/eKzG2mpGYzCLJ09rJPIhvcXnWWcKdFQx4GWB1O2D2DeIfLOnsCAwEA\n                                    AQKCAgA8HPaiNRusH87swhSfVbqX0EtMxmPTTlDx7VjoQTGX2akrfSTOhly7ZvKa\n                                    3+R9Rhai83OaYsnkjJwXHRLgotPB8XWP7bo717n/fdmnmHUtuXhrTML+E+xi0Cih\n                                    4dBNAVp+9qhIA2q+pxkcxoUo+ninDvL4oJm4SS8nTVIdn5qZ9PqahIoJY96EgP5E\n                                    eBRJ+ehZCwUHHP1xg7LdlKISbZTKz3pw142h/4NEeXNkb2VuBDLkKYQ2PjVmgknb\n                                    jdBOg5SI+FhAKvt+v+aO3Jep0cEpWwo8+483ZNQUQpcZzknuTYBwsu8l3F9c7MBe\n                                    l6sHehXQ4qiwhlcfbp4l6VRj+uTBTx7oG76sdhFOcL+bx/Qxigm+940D/xEePu8s\n                                    /+//u3U9vfTqItlktMWOO8FZoz5yY5MGhazGUnWXCoj/P+MgyJ0TUh5bVCiBN5S2\n                                    sVLbMbOVpI51+GP6rrmJKLon1tHZS5Kkm8o8gAKWpcf7sOSS1YJAunYyjqfgDD83\n                                    Gcrb+VbhWDChRmPN4vre2o3vh4IQywq1mm+7/XN7c4vviQ+YGBqFe8q7Xd3nozvg\n                                    LJ00X2K3K/gpxfWbSZ3+M3zt/UOGC5M0ljhe3fFyjE+3DMMPmquvtRqqkmrMlXSH\n                                    gXOYmjt5+F7aijZ615BtEL681VXLn8Zx+nkzsr4RADaKp8tXwQKCAQEA3aJOe1Vt\n                                    W527Ct9tbxSFYF9uWn/cPoK1CnEI6kyWfXlDgzj3Kbvq9U0lezf6dNuOMMjEkNJP\n                                    77J2LLdyAwLi5nqF9oVoxl6kSWqVWfrYwmc5HvQfeUCONqmA0IKC5BauacfGcNhK\n                                    xSFXUrbCrlL+BmLZ2iL/HPYwrTHUIoQer7jGDp6Aa+QsCgYoj+YXAQlMLFhMPK7a\n                                    K85mTjJXkO6EcGFFhgE8GHNGT6hL4mXPJdJv5t7qa/CokVTdsKTuSXUnYtK/+pQ1\n                                    RUqBqvTDYkawo0ha9EXNM2UzmSJvzau6tW/MzGT4G1Eq/sDTetgGwwGkB389d3KX\n                                    NogjLJyi9uOs9QKCAQEA2lq1RvAxLYQ+3u+PcJ5UQXdqAHDyRdbj54goeUg+huQk\n                                    uJxuZ+Gog6UdaaCQ59sqraTqZvxY9xIcA7T6NLl73Q7lg4zLSxJ8lUeQhKEB/E1v\n                                    m6VRvhcjXW0YPyflB0MDbyGgQSdox5LUt4W80qO+6rDE0Y8Wu7CTdP8IcQeR9s1x\n                                    Gn2gj2X/8LezfAKzji1+znUxoH2DGx/Cqb13JPupnYPPgIQEtU/pxDkKzrnAZOye\n                                    RulM4VNiblxL1ayRIaZ4reyaCOI0yL4qbSVubJDcISF1PazmnqS1Fzx8C6ng56E4\n                                    QPTYwiuxlb05fGmw+jCMrbPrGxbfHvdnjNQ5ueijrwKCAQEAndfD8Q5MDd1tojax\n                                    J1UEEDimzQkWf+ZyrPcHlGXrH31HWaMuU6ijkwPYV8LsOmFLCO9THpjJmToN85bK\n                                    Od7KXb6QvZsRnYU1l5uythxyVzFQevz9lUsmfUOGm/j24x5MJMXETAWeanpuSFgk\n                                    miY9B6tK35HhAm1LCW3dWJ+jgx4i37J+X1hnDNSJ+sGxTGmkuEhCM02Lz3r1XWd4\n                                    +Z0E8Uw1SVSDyh3+yyhesuQy/Qq76z6C0VDZnHdGU1GC6wnmfPj/BKScs7Z2Vpxu\n                                    sgUKM5+KN0Gm/J1se/kMivtsw17WChM2p63M4xXNB0XmuubmPPife/w+OPYHpvP/\n                                    E7neKQKCAQEAtdMk8r5eZSWjaOcZjdD6Hk2+4kErLYbk3s8dzOig0Ji4D1aMBUr+\n                                    lSjwVh3TrI5veotCeaGWv56/30Jbu33dK9YUvreGLaxmO7SNHjQowB0HXBeM+vqv\n                                    g0OuFiE1cReXi3n3xWl4sf+NzIi8FLcv6qRqMIqzhnViROF9+Qkxvc+TaFjGU8K/\n                                    HocKGbDyLemql2c1fQwnGXYYFlpkFVLPChBRwRWuCgFSiwho/H3nPONgZXIuh890\n                                    vqtypqp9bAUApuvH1K/w/lyEXcD2s8bo11nSFBqfK+nBtmiybs/2LUut2UFKIl5a\n                                    EXOxo+0q5xt4ecjBdRxVjaa8/qNWsn2LlwKCAQEAtb8gBaJRltVz0jqAtgeoYSgv\n                                    q6aWuH+g7pHidmRWKRNrDJX2HRvl+FPML8VFxuEaMPZXeyiAUoGAVu9a4BsugRkL\n                                    0nQd6zEPQOmLNpi8nNGsP6DdieD6v8oPWXZZ2CMSbq6hRG73LfNPDLxBLvq7qH6r\n                                    lEbgkuQNC60zOr/z74/JV0LD5t5g4m+y+69RXzX6M4GYM3LAgbAo8HS/0peEhOiA\n                                    YxH6FxKcQEUKkIy7b+hF3BgboH+ZBNDzbTd7qmAUSYPSeDwzsMXF0h8a7mGvAvCW\n                                    Q6Rdli9DgpuhUa8XXIPcLSbDGZ6NVnovbrfkUxMHr3mRKXgrdU1SZOcsyWYPRw==\n                                    -----END RSA PRIVATE KEY-----`);\n          this.addData(accData);\n          accData = \"\"; // });\n        });\n      });\n      console.log(\"finish\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Arquivos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onSubmit: this.onFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"files\",\n            class: \"btn\",\n            id: \"inputFile\",\n            style: {\n              borderStyle: \"dashed\",\n              borderColor: \"blue\",\n              margin: \"10% 0% 0% 5%\",\n              padding: \"50px 40% 50px 40%\",\n              color: \"blue\"\n            },\n            children: \"Select Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"files\",\n            style: {\n              margin: \"50px 50px 50px 50px\",\n              color: \"white\",\n              backgroundColor: \"white\",\n              visibility: \"hidden\"\n            },\n            type: \"file\",\n            name: \"file\",\n            onChange: e => this.onChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          style: {\n            margin: \"50px 20% 50px 0%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: \"50px 50px 50px 50px\"\n            },\n            children: \"Enviar criptografado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            style: {\n              margin: \"50px 50px 50px 50px\"\n            },\n            children: \"Enviar sem criptografia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            theme: \"secondary\",\n            style: {\n              margin: \"50px 50px 50px 50px\"\n            },\n            onClick: this.downloadTxtFile,\n            children: \"Baixar o arquivo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"agf\",\n          style: {\n            margin: \"50px 50px 50px 50px\",\n            backgroundColor: \"gray\",\n            fontSize: \"1\"\n          },\n          value: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this);\n  }\n\n  encryptMessage(message, privateKey) {\n    const jsEncrypt = new JSEncrypt();\n    jsEncrypt.setPublicKey(privateKey);\n    return jsEncrypt.encrypt(message);\n  }\n\n}\n\nexport default Submit_Component;","map":{"version":3,"sources":["/home/react-vm/dev/projects/freelancer/front-scorpion/src/pages/Arquivos/index.js"],"names":["render","axios","post","Component","JSEncrypt","Card","CardHeader","CardTitle","CardImg","CardBody","CardFooter","Button","Row","React","Submit_Component","constructor","props","addData","text","url","formData","file","filename","then","response","console","warn","document","getElementById","append","downloadTxtFile","element","createElement","Blob","innerHTML","type","href","URL","createObjectURL","download","body","appendChild","click","log","state","image","onChange","e","files","target","reader","FileReader","readAsDataURL","onload","chunkData","result","match","accData","forEach","chunckedData","encryptMessage","onFormSubmit","borderStyle","borderColor","margin","padding","color","backgroundColor","visibility","fontSize","message","privateKey","jsEncrypt","setPublicKey","encrypt"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAeC,IAAf,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,SAHJ,EAIIC,OAJJ,EAKIC,QALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,GARJ,QASS,cATT;AAUA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,gBAAN,SAA+BX,SAA/B,CAAwC;AACpCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;;AADkB,SAmGdC,OAnGc,GAmGHC,IAAD,IAAQ;AACd,YAAMC,GAAG,GAAG,kCAAZ;AACA,YAAMC,QAAQ,GAAG;AAACC,QAAAA,IAAI,EAAEH,IAAP;AAAaI,QAAAA,QAAQ,EAAE;AAAvB,OAAjB;AACApB,MAAAA,IAAI,CAACiB,GAAD,EAAMC,QAAN,CAAJ,CAAoBG,IAApB,CACIC,QAAQ,IAAEC,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBF,QAAvB,CADd;AAGAG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,MAA/B,CAAsCX,IAAtC;AACH,KA1Ga;;AAAA,SA4GdY,eA5Gc,GA4GI,MAAM;AACpB,YAAMC,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,GAAvB,CAAhB;AACA,YAAMX,IAAI,GAAG,IAAIY,IAAJ,CAAS,CAACN,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BM,SAAhC,CAAT,EACD;AAACC,QAAAA,IAAI,EAAE;AAAP,OADC,CAAb;AAEAJ,MAAAA,OAAO,CAACK,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBjB,IAApB,CAAf;AACAU,MAAAA,OAAO,CAACQ,QAAR,GAAmB,YAAnB;AACAZ,MAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BV,OAA1B;AACAA,MAAAA,OAAO,CAACW,KAAR;AACAjB,MAAAA,OAAO,CAACkB,GAAR,CAAYhB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BM,SAA3C;AACD,KArHW;;AAElB,SAAKU,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAIGC,EAAAA,QAAQ,CAACC,CAAD,EAAG;AACP,QAAIC,KAAK,GAAED,CAAC,CAACE,MAAF,CAASD,KAApB;AACA,QAAIE,MAAM,GAAC,IAAIC,UAAJ,EAAX;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBJ,KAAK,CAAC,CAAD,CAA1B;;AACAE,IAAAA,MAAM,CAACG,MAAP,GAAeN,CAAD,IAAK;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIO,SAAS,GAAGP,CAAC,CAACE,MAAF,CAASM,MAAT,CAAgBC,KAAhB,CAAsB,cAAtB,CAAhB;AACA,UAAIC,OAAO,GAAG,EAAd;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkB3B,OAAO,IAAI;AACzBA,QAAAA,OAAO,CAACyB,KAAR,CAAc,WAAd,EAA2BE,OAA3B,CAAmCC,YAAY,IAAG;AAC1C;AACI;AACIF,UAAAA,OAAO,IAAG,KAAKG,cAAL,CACND,YADM,EAGL;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEArD0C,CAAV;AA2DA,eAAK1C,OAAL,CAAawC,OAAb;AACAA,UAAAA,OAAO,GAAG,EAAV,CA/DkC,CAgEtC;AACP,SAjEL;AAoEH,OArED;AAsEIhC,MAAAA,OAAO,CAACkB,GAAR,CAAY,QAAZ;AAEH,KAlFL;AAoFC;;AAuBT3C,EAAAA,MAAM,GAAE;AACR,wBACI,QAAC,IAAD;AAAA,8BACI,QAAC,UAAD;AAAA,+BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA,gCACA;AAAK,UAAA,QAAQ,EAAE,KAAK6D,YAApB;AAAA,kCACA;AAAO,YAAA,GAAG,EAAC,OAAX;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAA+B,YAAA,EAAE,EAAC,WAAlC;AAA8C,YAAA,KAAK,EAAE;AAC/CC,cAAAA,WAAW,EAAC,QADmC;AAE/CC,cAAAA,WAAW,EAAE,MAFkC;AAG/CC,cAAAA,MAAM,EAAC,cAHwC;AAI/CC,cAAAA,OAAO,EAAC,mBAJuC;AAK/CC,cAAAA,KAAK,EAAE;AALwC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAQA;AAAO,YAAA,EAAE,EAAC,OAAV;AAAkB,YAAA,KAAK,EAAE;AAACF,cAAAA,MAAM,EAAC,qBAAR;AAA+BE,cAAAA,KAAK,EAAE,OAAtC;AAA+CC,cAAAA,eAAe,EAAE,OAAhE;AAAyEC,cAAAA,UAAU,EAAC;AAApF,aAAzB;AAAwH,YAAA,IAAI,EAAC,MAA7H;AAAoI,YAAA,IAAI,EAAC,MAAzI;AAAgJ,YAAA,QAAQ,EAAGrB,CAAD,IAAK,KAAKD,QAAL,CAAcC,CAAd;AAA/J;AAAA;AAAA;AAAA;AAAA,kBARA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAYA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,KAAK,EAAE;AAACiB,YAAAA,MAAM,EAAC;AAAR,WAAhC;AAAA,kCAKA,QAAC,MAAD;AAAS,YAAA,KAAK,EAAE;AAACA,cAAAA,MAAM,EAAC;AAAR,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAQA,QAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AAAgB,YAAA,KAAK,EAAE;AAACA,cAAAA,MAAM,EAAC;AAAR,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARA,eAWA,QAAC,MAAD;AAAS,YAAA,OAAO,MAAhB;AAAiB,YAAA,KAAK,EAAC,WAAvB;AAAmC,YAAA,KAAK,EAAE;AAACA,cAAAA,MAAM,EAAC;AAAR,aAA1C;AAA0E,YAAA,OAAO,EAAE,KAAKlC,eAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA,eAyBA;AAAK,UAAA,EAAE,EAAC,KAAR;AAAc,UAAA,KAAK,EAAE;AAACkC,YAAAA,MAAM,EAAC,qBAAR;AAA+BG,YAAAA,eAAe,EAAE,MAAhD;AAAwDE,YAAAA,QAAQ,EAAE;AAAlE,WAArB;AAA6F,UAAA,KAAK,EAAC;AAAnG;AAAA;AAAA;AAAA;AAAA,gBAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoCK;;AAGDT,EAAAA,cAAc,CAACU,OAAD,EAAUC,UAAV,EAAsB;AAChC,UAAMC,SAAS,GAAG,IAAIpE,SAAJ,EAAlB;AACAoE,IAAAA,SAAS,CAACC,YAAV,CAAuBF,UAAvB;AACA,WAAOC,SAAS,CAACE,OAAV,CAAkBJ,OAAlB,CAAP;AAGD;;AAvKiC;;AA0KxC,eAAexD,gBAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport axios, {post} from 'axios';\nimport { Component } from 'react';\nimport {JSEncrypt} from 'jsencrypt';\n\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    Row\n  } from \"shards-react\";\nimport React from \"react\";\nclass Submit_Component extends Component{\n    constructor(props){\n    super(props);\n    this.state = {\n        image: ''\n    }\n}\n\n\n    \n    onChange(e){\n        let files =e.target.files;\n        let reader=new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload=(e)=>{\n            // 2520 : 1:31.27\n            // 5010 : 1:17.26\n            // 25200: 1:16.85\n            // 50100 : 1:16.08\n            // 100200 : 1:14.52\n            // 150300 : 1:12.89 1:17.37\n            // 200400 : 1:14.55\n            var chunkData = e.target.result.match(/.{1,150300}/g);\n            var accData = \"\";\n            chunkData.forEach(element => {\n                element.match(/.{1,501}/g).forEach(chunckedData=> {\n                        // chunckedData.forEach(\n                            // rechunkedData=>{\n                                accData+= this.encryptMessage(\n                                    chunckedData,                                                                                                                                                                                                                             \n\n                                    `-----BEGIN RSA PRIVATE KEY-----\n                                    MIIJKgIBAAKCAgEAvQq+1cnsjqLgBO0M5B6WIVmQhd4znSoDvMK2dnG5WtgD/oFU\n                                    jzjXb2NUPfFAVW42KTOscReKKb9YMjtIZhO1Xxf48QE0sYEahiPiMSmHmALTvNhg\n                                    DBL/MsOz9k0SjxrrqVZ4d0ACYkuRltgG33eeI6sE6I6GJyXtIzyNpZxBkSS2MO3g\n                                    Il6ipUnWM/dDV4nnqiayGJfJ7oWCB8HjMdHmjV5O0Yqk0nb5dve+U/WB+5kFgfhw\n                                    Bxr4sACYGXLUa47T1U+2yxIgjKtz2R9t2WV0MkTVvjqGFH2JZf2Vn/SlcvjPh48u\n                                    ZPgapdYaR6QilNjz2ccemhRWjP5MtU5zJHNIYw5fYEQTNT7o1kP/sDdCWK1HelMH\n                                    jR4ccFv6Un72aaXKHIE/I6ABtdhlkmmbYwdQ4fi71f2lVgxbJJ3mTXgiMFOtJB7+\n                                    OQM9TngsFTzF31JLy1KUQ8zWzD5ZIIIxosvsg+wfjTLrEVRIvl9S0vKrHS0V28F/\n                                    u7ET1S9y1/hMklX50SRqw86jW4dH21O1Bvc0u50X/XwlRPgb91Q1B3mpui/t5aMr\n                                    a/PoZwaoFm16xQ8CjQhVA0rmTmd7zEg/oVlv+9dF/KwPld0ZFvy2SuwnNEtIoFiZ\n                                    LBH7WjJmJ/eKzG2mpGYzCLJ09rJPIhvcXnWWcKdFQx4GWB1O2D2DeIfLOnsCAwEA\n                                    AQKCAgA8HPaiNRusH87swhSfVbqX0EtMxmPTTlDx7VjoQTGX2akrfSTOhly7ZvKa\n                                    3+R9Rhai83OaYsnkjJwXHRLgotPB8XWP7bo717n/fdmnmHUtuXhrTML+E+xi0Cih\n                                    4dBNAVp+9qhIA2q+pxkcxoUo+ninDvL4oJm4SS8nTVIdn5qZ9PqahIoJY96EgP5E\n                                    eBRJ+ehZCwUHHP1xg7LdlKISbZTKz3pw142h/4NEeXNkb2VuBDLkKYQ2PjVmgknb\n                                    jdBOg5SI+FhAKvt+v+aO3Jep0cEpWwo8+483ZNQUQpcZzknuTYBwsu8l3F9c7MBe\n                                    l6sHehXQ4qiwhlcfbp4l6VRj+uTBTx7oG76sdhFOcL+bx/Qxigm+940D/xEePu8s\n                                    /+//u3U9vfTqItlktMWOO8FZoz5yY5MGhazGUnWXCoj/P+MgyJ0TUh5bVCiBN5S2\n                                    sVLbMbOVpI51+GP6rrmJKLon1tHZS5Kkm8o8gAKWpcf7sOSS1YJAunYyjqfgDD83\n                                    Gcrb+VbhWDChRmPN4vre2o3vh4IQywq1mm+7/XN7c4vviQ+YGBqFe8q7Xd3nozvg\n                                    LJ00X2K3K/gpxfWbSZ3+M3zt/UOGC5M0ljhe3fFyjE+3DMMPmquvtRqqkmrMlXSH\n                                    gXOYmjt5+F7aijZ615BtEL681VXLn8Zx+nkzsr4RADaKp8tXwQKCAQEA3aJOe1Vt\n                                    W527Ct9tbxSFYF9uWn/cPoK1CnEI6kyWfXlDgzj3Kbvq9U0lezf6dNuOMMjEkNJP\n                                    77J2LLdyAwLi5nqF9oVoxl6kSWqVWfrYwmc5HvQfeUCONqmA0IKC5BauacfGcNhK\n                                    xSFXUrbCrlL+BmLZ2iL/HPYwrTHUIoQer7jGDp6Aa+QsCgYoj+YXAQlMLFhMPK7a\n                                    K85mTjJXkO6EcGFFhgE8GHNGT6hL4mXPJdJv5t7qa/CokVTdsKTuSXUnYtK/+pQ1\n                                    RUqBqvTDYkawo0ha9EXNM2UzmSJvzau6tW/MzGT4G1Eq/sDTetgGwwGkB389d3KX\n                                    NogjLJyi9uOs9QKCAQEA2lq1RvAxLYQ+3u+PcJ5UQXdqAHDyRdbj54goeUg+huQk\n                                    uJxuZ+Gog6UdaaCQ59sqraTqZvxY9xIcA7T6NLl73Q7lg4zLSxJ8lUeQhKEB/E1v\n                                    m6VRvhcjXW0YPyflB0MDbyGgQSdox5LUt4W80qO+6rDE0Y8Wu7CTdP8IcQeR9s1x\n                                    Gn2gj2X/8LezfAKzji1+znUxoH2DGx/Cqb13JPupnYPPgIQEtU/pxDkKzrnAZOye\n                                    RulM4VNiblxL1ayRIaZ4reyaCOI0yL4qbSVubJDcISF1PazmnqS1Fzx8C6ng56E4\n                                    QPTYwiuxlb05fGmw+jCMrbPrGxbfHvdnjNQ5ueijrwKCAQEAndfD8Q5MDd1tojax\n                                    J1UEEDimzQkWf+ZyrPcHlGXrH31HWaMuU6ijkwPYV8LsOmFLCO9THpjJmToN85bK\n                                    Od7KXb6QvZsRnYU1l5uythxyVzFQevz9lUsmfUOGm/j24x5MJMXETAWeanpuSFgk\n                                    miY9B6tK35HhAm1LCW3dWJ+jgx4i37J+X1hnDNSJ+sGxTGmkuEhCM02Lz3r1XWd4\n                                    +Z0E8Uw1SVSDyh3+yyhesuQy/Qq76z6C0VDZnHdGU1GC6wnmfPj/BKScs7Z2Vpxu\n                                    sgUKM5+KN0Gm/J1se/kMivtsw17WChM2p63M4xXNB0XmuubmPPife/w+OPYHpvP/\n                                    E7neKQKCAQEAtdMk8r5eZSWjaOcZjdD6Hk2+4kErLYbk3s8dzOig0Ji4D1aMBUr+\n                                    lSjwVh3TrI5veotCeaGWv56/30Jbu33dK9YUvreGLaxmO7SNHjQowB0HXBeM+vqv\n                                    g0OuFiE1cReXi3n3xWl4sf+NzIi8FLcv6qRqMIqzhnViROF9+Qkxvc+TaFjGU8K/\n                                    HocKGbDyLemql2c1fQwnGXYYFlpkFVLPChBRwRWuCgFSiwho/H3nPONgZXIuh890\n                                    vqtypqp9bAUApuvH1K/w/lyEXcD2s8bo11nSFBqfK+nBtmiybs/2LUut2UFKIl5a\n                                    EXOxo+0q5xt4ecjBdRxVjaa8/qNWsn2LlwKCAQEAtb8gBaJRltVz0jqAtgeoYSgv\n                                    q6aWuH+g7pHidmRWKRNrDJX2HRvl+FPML8VFxuEaMPZXeyiAUoGAVu9a4BsugRkL\n                                    0nQd6zEPQOmLNpi8nNGsP6DdieD6v8oPWXZZ2CMSbq6hRG73LfNPDLxBLvq7qH6r\n                                    lEbgkuQNC60zOr/z74/JV0LD5t5g4m+y+69RXzX6M4GYM3LAgbAo8HS/0peEhOiA\n                                    YxH6FxKcQEUKkIy7b+hF3BgboH+ZBNDzbTd7qmAUSYPSeDwzsMXF0h8a7mGvAvCW\n                                    Q6Rdli9DgpuhUa8XXIPcLSbDGZ6NVnovbrfkUxMHr3mRKXgrdU1SZOcsyWYPRw==\n                                    -----END RSA PRIVATE KEY-----`\n                                    \n                                    \n                                    \n                                    \n                                );\n                                this.addData(accData);\n                                accData = \"\";\n                            // });\n                    });\n\n                    \n            });\n                console.log(\"finish\");\n            \n            }\n           \n        }\n        \n        addData = (text)=>{\n            const url = \"http://192.168.5.113/decrypt.php\";\n            const formData = {file: text, filename: \"envioDoReact\"};\n            post(url, formData).then(\n                response=>console.warn(\"result\", response)\n            );\n            document.getElementById('agf').append(text);\n        }\n\n        downloadTxtFile = () => {\n            const element = document.createElement(\"a\");\n            const file = new Blob([document.getElementById('agf').innerHTML],    \n                        {type: 'text/plain;charset=utf-8'});\n            element.href = URL.createObjectURL(file);\n            element.download = \"myFile.txt\";\n            document.body.appendChild(element);\n            element.click();\n            console.log(document.getElementById('agf').innerHTML);\n          }\n\n            \nrender(){\nreturn(\n    <Card >\n        <CardHeader><h1>Arquivos</h1></CardHeader>\n        <CardBody >\n        <div onSubmit={this.onFormSubmit}>\n        <label for=\"files\" class=\"btn\" id=\"inputFile\" style={{\n              borderStyle:\"dashed\", \n              borderColor: \"blue\",\n              margin:\"10% 0% 0% 5%\",\n              padding:\"50px 40% 50px 40%\",\n              color: \"blue\"\n        }}>Select Image</label>\n        <input id=\"files\" style={{margin:\"50px 50px 50px 50px\", color: \"white\", backgroundColor: \"white\", visibility:\"hidden\"}} type=\"file\" name=\"file\" onChange={(e)=>this.onChange(e) }/>\n        </div>\n\n        <div className=\"example\" style={{margin:\"50px 20% 50px 0%\"}}>\n\n    \n\n        \n        <Button  style={{margin:\"50px 50px 50px 50px\"}}>\n        Enviar criptografado\n        </Button>\n        <Button outline style={{margin:\"50px 50px 50px 50px\"}} >\n        Enviar sem criptografia\n        </Button>\n        <Button  outline theme=\"secondary\" style={{margin:\"50px 50px 50px 50px\"}} onClick={this.downloadTxtFile}>Baixar o arquivo</Button>  \n        </div>\n        <div id=\"agf\" style={{margin:\"50px 50px 50px 50px\", backgroundColor: \"gray\", fontSize: \"1\"}} value=\"teste\">\n        </div>\n \n        </CardBody>\n    </Card>\n    )\n        \n\n    }\n\n\n    encryptMessage(message, privateKey) {\n        const jsEncrypt = new JSEncrypt();\n        jsEncrypt.setPublicKey(privateKey);\n        return jsEncrypt.encrypt(message);\n       \n        \n      }\n}\n\nexport default Submit_Component;\n"]},"metadata":{},"sourceType":"module"}