{"ast":null,"code":"import { Component } from \"react\";\nimport moment from \"moment\";\n\nclass _Page extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getParam = attr => {\n      return (this.props.match ? this.props.match.params || {} : {})[attr];\n    };\n\n    this.update = (state = this.state) => {\n      return this._canUpdate && this.setState(state);\n    };\n\n    this.loading = () => {\n      return this.update({\n        loading: true\n      });\n    };\n\n    this.loaded = () => {\n      return this.update({\n        loading: false\n      });\n    };\n\n    this._handleInputChange = (e, target = this.state) => {\n      target[e.target.name] = e.target.value;\n      return this.update();\n    };\n\n    this.getModel = async () => {\n      if (!+this.getParam(\"id\")) {\n        return;\n      }\n\n      return this.service.get(this.getParam(\"id\")).then(async ({\n        data\n      }) => {\n        await this.update({\n          model: data\n        });\n\n        if (data.account_opened) {\n          data.account_opened = moment(data.account_opened);\n        }\n\n        if (data.last_login) {\n          data.last_login = moment(data.last_login);\n        }\n\n        if (data.respond_date) {\n          data.respond_date = moment(data.respond_date);\n        }\n\n        if (data.last_transaction) {\n          data.last_transaction = moment(data.last_transaction);\n        }\n\n        if (this.formRef) {\n          this.formRef.setFieldsValue(data);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this._canUpdate = true;\n  }\n\n  componentWillUnmount() {\n    this._canUpdate = false;\n  }\n\n}\n\nexport default _Page;","map":{"version":3,"sources":["/home/react-vm/dev/projects/freelancer/front-scorpion/src/pages/_Page.js"],"names":["Component","moment","_Page","getParam","attr","props","match","params","update","state","_canUpdate","setState","loading","loaded","_handleInputChange","e","target","name","value","getModel","service","get","then","data","model","account_opened","last_login","respond_date","last_transaction","formRef","setFieldsValue","componentDidMount","componentWillUnmount"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAS5BG,QAT4B,GAShBC,IAAD,IAAU;AACnB,aAAO,CAAC,KAAKC,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,IAA2B,EAA9C,GAAmD,EAApD,EAAwDH,IAAxD,CAAP;AACD,KAX2B;;AAAA,SAa5BI,MAb4B,GAanB,CAACC,KAAK,GAAG,KAAKA,KAAd,KAAwB;AAC/B,aAAO,KAAKC,UAAL,IAAmB,KAAKC,QAAL,CAAcF,KAAd,CAA1B;AACD,KAf2B;;AAAA,SAiB5BG,OAjB4B,GAiBlB,MAAM;AACd,aAAO,KAAKJ,MAAL,CAAY;AAACI,QAAAA,OAAO,EAAE;AAAV,OAAZ,CAAP;AACD,KAnB2B;;AAAA,SAqB5BC,MArB4B,GAqBnB,MAAM;AACb,aAAO,KAAKL,MAAL,CAAY;AAACI,QAAAA,OAAO,EAAE;AAAV,OAAZ,CAAP;AACD,KAvB2B;;AAAA,SAyB5BE,kBAzB4B,GAyBP,CAACC,CAAD,EAAIC,MAAM,GAAG,KAAKP,KAAlB,KAA4B;AAC/CO,MAAAA,MAAM,CAACD,CAAC,CAACC,MAAF,CAASC,IAAV,CAAN,GAAwBF,CAAC,CAACC,MAAF,CAASE,KAAjC;AACA,aAAO,KAAKV,MAAL,EAAP;AACD,KA5B2B;;AAAA,SA+B5BW,QA/B4B,GA+BjB,YAAY;AACrB,UAAI,CAAC,CAAC,KAAKhB,QAAL,CAAc,IAAd,CAAN,EAA2B;AACzB;AACD;;AAED,aAAO,KAAKiB,OAAL,CACJC,GADI,CACA,KAAKlB,QAAL,CAAc,IAAd,CADA,EAEJmB,IAFI,CAEC,OAAO;AAACC,QAAAA;AAAD,OAAP,KAAkB;AACtB,cAAM,KAAKf,MAAL,CAAY;AAACgB,UAAAA,KAAK,EAAED;AAAR,SAAZ,CAAN;;AAEA,YAAIA,IAAI,CAACE,cAAT,EAAyB;AACvBF,UAAAA,IAAI,CAACE,cAAL,GAAsBxB,MAAM,CAACsB,IAAI,CAACE,cAAN,CAA5B;AACD;;AAED,YAAIF,IAAI,CAACG,UAAT,EAAqB;AACnBH,UAAAA,IAAI,CAACG,UAAL,GAAkBzB,MAAM,CAACsB,IAAI,CAACG,UAAN,CAAxB;AACD;;AAED,YAAIH,IAAI,CAACI,YAAT,EAAuB;AACrBJ,UAAAA,IAAI,CAACI,YAAL,GAAoB1B,MAAM,CAACsB,IAAI,CAACI,YAAN,CAA1B;AACD;;AAED,YAAIJ,IAAI,CAACK,gBAAT,EAA2B;AACzBL,UAAAA,IAAI,CAACK,gBAAL,GAAwB3B,MAAM,CAACsB,IAAI,CAACK,gBAAN,CAA9B;AACD;;AAED,YAAI,KAAKC,OAAT,EAAkB;AAChB,eAAKA,OAAL,CAAaC,cAAb,CAA4BP,IAA5B;AACD;AACF,OAxBI,CAAP;AAyBD,KA7D2B;AAAA;;AAC5BQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,UAAL,GAAkB,IAAlB;AACD;;AAEDsB,EAAAA,oBAAoB,GAAG;AACrB,SAAKtB,UAAL,GAAkB,KAAlB;AACD;;AAP2B;;AAgE9B,eAAeR,KAAf","sourcesContent":["import {Component} from \"react\";\nimport moment from \"moment\";\n\nclass _Page extends Component {\n  componentDidMount() {\n    this._canUpdate = true;\n  }\n\n  componentWillUnmount() {\n    this._canUpdate = false;\n  }\n\n  getParam = (attr) => {\n    return (this.props.match ? this.props.match.params || {} : {})[attr];\n  };\n\n  update = (state = this.state) => {\n    return this._canUpdate && this.setState(state);\n  };\n\n  loading = () => {\n    return this.update({loading: true});\n  };\n\n  loaded = () => {\n    return this.update({loading: false});\n  };\n\n  _handleInputChange = (e, target = this.state) => {\n    target[e.target.name] = e.target.value;\n    return this.update();\n  };\n\n  // funcao util para buscar os dados do model\n  getModel = async () => {\n    if (!+this.getParam(\"id\")) {\n      return;\n    }\n\n    return this.service\n      .get(this.getParam(\"id\"))\n      .then(async ({data}) => {\n        await this.update({model: data});\n\n        if (data.account_opened) {\n          data.account_opened = moment(data.account_opened);\n        }\n\n        if (data.last_login) {\n          data.last_login = moment(data.last_login);\n        }\n\n        if (data.respond_date) {\n          data.respond_date = moment(data.respond_date);\n        }\n\n        if (data.last_transaction) {\n          data.last_transaction = moment(data.last_transaction);\n        }\n\n        if (this.formRef) {\n          this.formRef.setFieldsValue(data);\n        }\n      });\n  };\n}\n\nexport default _Page;\n"]},"metadata":{},"sourceType":"module"}