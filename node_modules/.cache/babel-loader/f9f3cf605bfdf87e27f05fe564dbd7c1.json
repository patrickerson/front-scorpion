{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/react-vm/dev/projects/freelancer/front-scorpion/src/pages/Arquivos/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _Page from \"../_Page\";\nimport axios, { post } from 'axios';\nimport { Component } from 'react';\nimport MemberInfoService from \"../../services/MemberInfoService\";\nimport Header from \"../../components/Header\";\nimport { JSEncrypt } from 'jsencrypt';\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport \"./styles.css\";\nimport { Upload, Form, Input, InputNumber, DatePicker, Button, Layout, notification } from \"antd\"; // import from \"@ant-design/icons\";\n\nconst {\n  Content\n} = Layout;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nexport default class SubmitComponent extends _Page {\n  componentDidMount() {\n    this.getModel();\n  }\n\n  constructor(props) {\n    super(props);\n    this.service = MemberInfoService;\n    this.state = {\n      model: {}\n    };\n\n    this.handleSubmit = e => {\n      // e.preventDefault();\n      MemberInfoService.save(e, \"ID\").then(response => {\n        this.update({\n          model: response.data\n        });\n        notification.open({\n          message: \"Sucesso!\",\n          description: \"Suas alterações foram salvas com sucesso.\"\n        });\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.addData = text => {\n      const url = \"http://192.168.5.113/decrypt.php\";\n      const formData = {\n        file: text,\n        filename: \"envioDoReact\"\n      };\n      post(url, formData).then(response => console.warn(\"result\", response));\n    };\n\n    this.downloadTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById('agf').innerHTML], {\n        type: 'text/plain;charset=utf-8'\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"myFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n      console.log(document.getElementById('agf').innerHTML);\n    };\n\n    this.state = {\n      image: ''\n    };\n  }\n\n  onChange(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n\n    reader.onload = e => {\n      // 2520 : 1:31.27\n      // 5010 : 1:17.26\n      // 25200: 1:16.85\n      // 50100 : 1:16.08\n      // 100200 : 1:14.52\n      // 150300 : 1:12.89 1:17.37\n      // 200400 : 1:14.55\n      var chunkData = e.target.result.match(/.{1,150300}/g);\n      var accData = \"\";\n      chunkData.forEach(element => {\n        element.match(/.{1,501}/g).forEach(chunckedData => {\n          // chunckedData.forEach(\n          // rechunkedData=>{\n          accData += this.encryptMessage(chunckedData, `-----BEGIN RSA PRIVATE KEY-----\n                                    MIIJKgIBAAKCAgEAvQq+1cnsjqLgBO0M5B6WIVmQhd4znSoDvMK2dnG5WtgD/oFU\n                                    jzjXb2NUPfFAVW42KTOscReKKb9YMjtIZhO1Xxf48QE0sYEahiPiMSmHmALTvNhg\n                                    DBL/MsOz9k0SjxrrqVZ4d0ACYkuRltgG33eeI6sE6I6GJyXtIzyNpZxBkSS2MO3g\n                                    Il6ipUnWM/dDV4nnqiayGJfJ7oWCB8HjMdHmjV5O0Yqk0nb5dve+U/WB+5kFgfhw\n                                    Bxr4sACYGXLUa47T1U+2yxIgjKtz2R9t2WV0MkTVvjqGFH2JZf2Vn/SlcvjPh48u\n                                    ZPgapdYaR6QilNjz2ccemhRWjP5MtU5zJHNIYw5fYEQTNT7o1kP/sDdCWK1HelMH\n                                    jR4ccFv6Un72aaXKHIE/I6ABtdhlkmmbYwdQ4fi71f2lVgxbJJ3mTXgiMFOtJB7+\n                                    OQM9TngsFTzF31JLy1KUQ8zWzD5ZIIIxosvsg+wfjTLrEVRIvl9S0vKrHS0V28F/\n                                    u7ET1S9y1/hMklX50SRqw86jW4dH21O1Bvc0u50X/XwlRPgb91Q1B3mpui/t5aMr\n                                    a/PoZwaoFm16xQ8CjQhVA0rmTmd7zEg/oVlv+9dF/KwPld0ZFvy2SuwnNEtIoFiZ\n                                    LBH7WjJmJ/eKzG2mpGYzCLJ09rJPIhvcXnWWcKdFQx4GWB1O2D2DeIfLOnsCAwEA\n                                    AQKCAgA8HPaiNRusH87swhSfVbqX0EtMxmPTTlDx7VjoQTGX2akrfSTOhly7ZvKa\n                                    3+R9Rhai83OaYsnkjJwXHRLgotPB8XWP7bo717n/fdmnmHUtuXhrTML+E+xi0Cih\n                                    4dBNAVp+9qhIA2q+pxkcxoUo+ninDvL4oJm4SS8nTVIdn5qZ9PqahIoJY96EgP5E\n                                    eBRJ+ehZCwUHHP1xg7LdlKISbZTKz3pw142h/4NEeXNkb2VuBDLkKYQ2PjVmgknb\n                                    jdBOg5SI+FhAKvt+v+aO3Jep0cEpWwo8+483ZNQUQpcZzknuTYBwsu8l3F9c7MBe\n                                    l6sHehXQ4qiwhlcfbp4l6VRj+uTBTx7oG76sdhFOcL+bx/Qxigm+940D/xEePu8s\n                                    /+//u3U9vfTqItlktMWOO8FZoz5yY5MGhazGUnWXCoj/P+MgyJ0TUh5bVCiBN5S2\n                                    sVLbMbOVpI51+GP6rrmJKLon1tHZS5Kkm8o8gAKWpcf7sOSS1YJAunYyjqfgDD83\n                                    Gcrb+VbhWDChRmPN4vre2o3vh4IQywq1mm+7/XN7c4vviQ+YGBqFe8q7Xd3nozvg\n                                    LJ00X2K3K/gpxfWbSZ3+M3zt/UOGC5M0ljhe3fFyjE+3DMMPmquvtRqqkmrMlXSH\n                                    gXOYmjt5+F7aijZ615BtEL681VXLn8Zx+nkzsr4RADaKp8tXwQKCAQEA3aJOe1Vt\n                                    W527Ct9tbxSFYF9uWn/cPoK1CnEI6kyWfXlDgzj3Kbvq9U0lezf6dNuOMMjEkNJP\n                                    77J2LLdyAwLi5nqF9oVoxl6kSWqVWfrYwmc5HvQfeUCONqmA0IKC5BauacfGcNhK\n                                    xSFXUrbCrlL+BmLZ2iL/HPYwrTHUIoQer7jGDp6Aa+QsCgYoj+YXAQlMLFhMPK7a\n                                    K85mTjJXkO6EcGFFhgE8GHNGT6hL4mXPJdJv5t7qa/CokVTdsKTuSXUnYtK/+pQ1\n                                    RUqBqvTDYkawo0ha9EXNM2UzmSJvzau6tW/MzGT4G1Eq/sDTetgGwwGkB389d3KX\n                                    NogjLJyi9uOs9QKCAQEA2lq1RvAxLYQ+3u+PcJ5UQXdqAHDyRdbj54goeUg+huQk\n                                    uJxuZ+Gog6UdaaCQ59sqraTqZvxY9xIcA7T6NLl73Q7lg4zLSxJ8lUeQhKEB/E1v\n                                    m6VRvhcjXW0YPyflB0MDbyGgQSdox5LUt4W80qO+6rDE0Y8Wu7CTdP8IcQeR9s1x\n                                    Gn2gj2X/8LezfAKzji1+znUxoH2DGx/Cqb13JPupnYPPgIQEtU/pxDkKzrnAZOye\n                                    RulM4VNiblxL1ayRIaZ4reyaCOI0yL4qbSVubJDcISF1PazmnqS1Fzx8C6ng56E4\n                                    QPTYwiuxlb05fGmw+jCMrbPrGxbfHvdnjNQ5ueijrwKCAQEAndfD8Q5MDd1tojax\n                                    J1UEEDimzQkWf+ZyrPcHlGXrH31HWaMuU6ijkwPYV8LsOmFLCO9THpjJmToN85bK\n                                    Od7KXb6QvZsRnYU1l5uythxyVzFQevz9lUsmfUOGm/j24x5MJMXETAWeanpuSFgk\n                                    miY9B6tK35HhAm1LCW3dWJ+jgx4i37J+X1hnDNSJ+sGxTGmkuEhCM02Lz3r1XWd4\n                                    +Z0E8Uw1SVSDyh3+yyhesuQy/Qq76z6C0VDZnHdGU1GC6wnmfPj/BKScs7Z2Vpxu\n                                    sgUKM5+KN0Gm/J1se/kMivtsw17WChM2p63M4xXNB0XmuubmPPife/w+OPYHpvP/\n                                    E7neKQKCAQEAtdMk8r5eZSWjaOcZjdD6Hk2+4kErLYbk3s8dzOig0Ji4D1aMBUr+\n                                    lSjwVh3TrI5veotCeaGWv56/30Jbu33dK9YUvreGLaxmO7SNHjQowB0HXBeM+vqv\n                                    g0OuFiE1cReXi3n3xWl4sf+NzIi8FLcv6qRqMIqzhnViROF9+Qkxvc+TaFjGU8K/\n                                    HocKGbDyLemql2c1fQwnGXYYFlpkFVLPChBRwRWuCgFSiwho/H3nPONgZXIuh890\n                                    vqtypqp9bAUApuvH1K/w/lyEXcD2s8bo11nSFBqfK+nBtmiybs/2LUut2UFKIl5a\n                                    EXOxo+0q5xt4ecjBdRxVjaa8/qNWsn2LlwKCAQEAtb8gBaJRltVz0jqAtgeoYSgv\n                                    q6aWuH+g7pHidmRWKRNrDJX2HRvl+FPML8VFxuEaMPZXeyiAUoGAVu9a4BsugRkL\n                                    0nQd6zEPQOmLNpi8nNGsP6DdieD6v8oPWXZZ2CMSbq6hRG73LfNPDLxBLvq7qH6r\n                                    lEbgkuQNC60zOr/z74/JV0LD5t5g4m+y+69RXzX6M4GYM3LAgbAo8HS/0peEhOiA\n                                    YxH6FxKcQEUKkIy7b+hF3BgboH+ZBNDzbTd7qmAUSYPSeDwzsMXF0h8a7mGvAvCW\n                                    Q6Rdli9DgpuhUa8XXIPcLSbDGZ6NVnovbrfkUxMHr3mRKXgrdU1SZOcsyWYPRw==\n                                    -----END RSA PRIVATE KEY-----`);\n          this.addData(accData);\n          accData = \"\"; // });\n        });\n      });\n      console.log(\"finish\");\n    };\n  }\n\n  encryptMessage(message, privateKey) {\n    const jsEncrypt = new JSEncrypt();\n    jsEncrypt.setPublicKey(privateKey);\n    return jsEncrypt.encrypt(message);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Upload, {\n        directory: true,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ant-upload-drag-icon\",\n          children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 27\n          }, this),\n          children: \"Insira um arquivo ou Diret\\xF3rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false); // return (\n    //   <>\n    //     <Layout style={{backgroundColor: \"white\"}}>\n    //       <Header/>\n    //       <Content className={\"card-criptografia\"}>\n    //              <div onSubmit={this.onFormSubmit}>\n    //      <label for=\"files\" class=\"btn\" id=\"inputFile\" >Select Image</label>\n    //     <input id=\"files\"  type=\"file\" name=\"file\" onChange={(e)=>this.onChange(e) }/>\n    //     </div>\n    //              <div id=\"agf\" style={{margin:\"50px 50px 50px 50px\", backgroundColor: \"gray\", fontSize: \"1\"}} value=\"teste\"></div>\n    //     <Button type=\"primary\" htmlType=\"submit\" onClick={this.downloadTxtFile}>\n    //               Submit\n    //             </Button>\n    //     </Content>\n    //     </Layout>\n    //   </>\n    // );\n  }\n\n} // class Submit_Component extends Component{\n// render(){\n// return(\n//     <Card >\n//         <CardHeader><h1>Arquivos</h1></CardHeader>\n//         <CardBody >\n//         <div onSubmit={this.onFormSubmit}>\n//         <label for=\"files\" class=\"btn\" id=\"inputFile\" style={{\n//               borderStyle:\"dashed\", \n//               borderColor: \"blue\",\n//               margin:\"10% 0% 0% 5%\",\n//               padding:\"50px 40% 50px 40%\",\n//               color: \"blue\"\n//         }}>Select Image</label>\n//         <input id=\"files\" style={{margin:\"50px 50px 50px 50px\", color: \"white\", backgroundColor: \"white\", visibility:\"hidden\"}} type=\"file\" name=\"file\" onChange={(e)=>this.onChange(e) }/>\n//         </div>\n//         <div className=\"example\" style={{margin:\"50px 20% 50px 0%\"}}>\n//         <Button  style={{margin:\"50px 50px 50px 50px\"}}>\n//         Enviar criptografado\n//         </Button>\n//         <Button outline style={{margin:\"50px 50px 50px 50px\"}} >\n//         Enviar sem criptografia\n//         </Button>\n//         <Button  outline theme=\"secondary\" style={{margin:\"50px 50px 50px 50px\"}} onClick={this.downloadTxtFile}>Baixar o arquivo</Button>  \n//         </div>\n//         <div id=\"agf\" style={{margin:\"50px 50px 50px 50px\", backgroundColor: \"gray\", fontSize: \"1\"}} value=\"teste\">\n//         </div>\n//         </CardBody>\n//     </Card>\n//     )\n//     }\n//     encryptMessage(message, privateKey) {\n//         const jsEncrypt = new JSEncrypt();\n//         jsEncrypt.setPublicKey(privateKey);\n//         return jsEncrypt.encrypt(message);\n//       }\n// }\n\nSubmitComponent.propTypes = {\n  form: PropTypes.any.isRequired\n};","map":{"version":3,"sources":["/home/react-vm/dev/projects/freelancer/front-scorpion/src/pages/Arquivos/index.js"],"names":["React","PropTypes","_Page","axios","post","Component","MemberInfoService","Header","JSEncrypt","UploadOutlined","Upload","Form","Input","InputNumber","DatePicker","Button","Layout","notification","Content","layout","labelCol","span","wrapperCol","SubmitComponent","componentDidMount","getModel","constructor","props","service","state","model","handleSubmit","e","save","then","response","update","data","open","message","description","history","push","addData","text","url","formData","file","filename","console","warn","downloadTxtFile","element","document","createElement","Blob","getElementById","innerHTML","type","href","URL","createObjectURL","download","body","appendChild","click","log","image","onChange","files","target","reader","FileReader","readAsDataURL","onload","chunkData","result","match","accData","forEach","chunckedData","encryptMessage","privateKey","jsEncrypt","setPublicKey","encrypt","render","propTypes","form","any","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _Page from \"../_Page\";\nimport axios, {post} from 'axios';\nimport { Component } from 'react';\nimport MemberInfoService from \"../../services/MemberInfoService\";\nimport Header from \"../../components/Header\";\nimport {JSEncrypt} from 'jsencrypt';\nimport {UploadOutlined} from \"@ant-design/icons\";\n\nimport \"./styles.css\";\n\nimport {\n  Upload,\n  Form,\n  Input,\n  InputNumber,\n  DatePicker,\n  Button,\n  Layout,\n  notification\n} from \"antd\";\n// import from \"@ant-design/icons\";\n\nconst {Content} = Layout;\n\nconst layout = {\n  labelCol: {span: 8},\n  wrapperCol: {span: 16},\n};\n\nexport default class SubmitComponent extends _Page {\n  static propTypes = {\n    form: PropTypes.any.isRequired\n  };\n\n  service = MemberInfoService;\n  state = {\n    model: {}\n  };\n\n  componentDidMount() {\n    this.getModel();\n  }\n\n  handleSubmit = e => {\n    // e.preventDefault();\n    MemberInfoService.save(e, \"ID\").then(response => {\n      this.update({model: response.data});\n      notification.open({\n        message: \"Sucesso!\",\n        description: \"Suas alterações foram salvas com sucesso.\"\n      });\n      this.props.history.push(\"/\")\n    });\n  };\n\n  constructor(props){\n    super(props);\n    this.state = {\n        image: ''\n    }\n}\n\n\n    \n    onChange(e){\n        let files =e.target.files;\n        let reader=new FileReader();\n        reader.readAsDataURL(files[0]);\n        reader.onload=(e)=>{\n            // 2520 : 1:31.27\n            // 5010 : 1:17.26\n            // 25200: 1:16.85\n            // 50100 : 1:16.08\n            // 100200 : 1:14.52\n            // 150300 : 1:12.89 1:17.37\n            // 200400 : 1:14.55\n            var chunkData = e.target.result.match(/.{1,150300}/g);\n            var accData = \"\";\n            chunkData.forEach(element => {\n                element.match(/.{1,501}/g).forEach(chunckedData=> {\n                        // chunckedData.forEach(\n                            // rechunkedData=>{\n                                accData+= this.encryptMessage(\n                                    chunckedData,                                                                                                                                                                                                                             \n\n                                    `-----BEGIN RSA PRIVATE KEY-----\n                                    MIIJKgIBAAKCAgEAvQq+1cnsjqLgBO0M5B6WIVmQhd4znSoDvMK2dnG5WtgD/oFU\n                                    jzjXb2NUPfFAVW42KTOscReKKb9YMjtIZhO1Xxf48QE0sYEahiPiMSmHmALTvNhg\n                                    DBL/MsOz9k0SjxrrqVZ4d0ACYkuRltgG33eeI6sE6I6GJyXtIzyNpZxBkSS2MO3g\n                                    Il6ipUnWM/dDV4nnqiayGJfJ7oWCB8HjMdHmjV5O0Yqk0nb5dve+U/WB+5kFgfhw\n                                    Bxr4sACYGXLUa47T1U+2yxIgjKtz2R9t2WV0MkTVvjqGFH2JZf2Vn/SlcvjPh48u\n                                    ZPgapdYaR6QilNjz2ccemhRWjP5MtU5zJHNIYw5fYEQTNT7o1kP/sDdCWK1HelMH\n                                    jR4ccFv6Un72aaXKHIE/I6ABtdhlkmmbYwdQ4fi71f2lVgxbJJ3mTXgiMFOtJB7+\n                                    OQM9TngsFTzF31JLy1KUQ8zWzD5ZIIIxosvsg+wfjTLrEVRIvl9S0vKrHS0V28F/\n                                    u7ET1S9y1/hMklX50SRqw86jW4dH21O1Bvc0u50X/XwlRPgb91Q1B3mpui/t5aMr\n                                    a/PoZwaoFm16xQ8CjQhVA0rmTmd7zEg/oVlv+9dF/KwPld0ZFvy2SuwnNEtIoFiZ\n                                    LBH7WjJmJ/eKzG2mpGYzCLJ09rJPIhvcXnWWcKdFQx4GWB1O2D2DeIfLOnsCAwEA\n                                    AQKCAgA8HPaiNRusH87swhSfVbqX0EtMxmPTTlDx7VjoQTGX2akrfSTOhly7ZvKa\n                                    3+R9Rhai83OaYsnkjJwXHRLgotPB8XWP7bo717n/fdmnmHUtuXhrTML+E+xi0Cih\n                                    4dBNAVp+9qhIA2q+pxkcxoUo+ninDvL4oJm4SS8nTVIdn5qZ9PqahIoJY96EgP5E\n                                    eBRJ+ehZCwUHHP1xg7LdlKISbZTKz3pw142h/4NEeXNkb2VuBDLkKYQ2PjVmgknb\n                                    jdBOg5SI+FhAKvt+v+aO3Jep0cEpWwo8+483ZNQUQpcZzknuTYBwsu8l3F9c7MBe\n                                    l6sHehXQ4qiwhlcfbp4l6VRj+uTBTx7oG76sdhFOcL+bx/Qxigm+940D/xEePu8s\n                                    /+//u3U9vfTqItlktMWOO8FZoz5yY5MGhazGUnWXCoj/P+MgyJ0TUh5bVCiBN5S2\n                                    sVLbMbOVpI51+GP6rrmJKLon1tHZS5Kkm8o8gAKWpcf7sOSS1YJAunYyjqfgDD83\n                                    Gcrb+VbhWDChRmPN4vre2o3vh4IQywq1mm+7/XN7c4vviQ+YGBqFe8q7Xd3nozvg\n                                    LJ00X2K3K/gpxfWbSZ3+M3zt/UOGC5M0ljhe3fFyjE+3DMMPmquvtRqqkmrMlXSH\n                                    gXOYmjt5+F7aijZ615BtEL681VXLn8Zx+nkzsr4RADaKp8tXwQKCAQEA3aJOe1Vt\n                                    W527Ct9tbxSFYF9uWn/cPoK1CnEI6kyWfXlDgzj3Kbvq9U0lezf6dNuOMMjEkNJP\n                                    77J2LLdyAwLi5nqF9oVoxl6kSWqVWfrYwmc5HvQfeUCONqmA0IKC5BauacfGcNhK\n                                    xSFXUrbCrlL+BmLZ2iL/HPYwrTHUIoQer7jGDp6Aa+QsCgYoj+YXAQlMLFhMPK7a\n                                    K85mTjJXkO6EcGFFhgE8GHNGT6hL4mXPJdJv5t7qa/CokVTdsKTuSXUnYtK/+pQ1\n                                    RUqBqvTDYkawo0ha9EXNM2UzmSJvzau6tW/MzGT4G1Eq/sDTetgGwwGkB389d3KX\n                                    NogjLJyi9uOs9QKCAQEA2lq1RvAxLYQ+3u+PcJ5UQXdqAHDyRdbj54goeUg+huQk\n                                    uJxuZ+Gog6UdaaCQ59sqraTqZvxY9xIcA7T6NLl73Q7lg4zLSxJ8lUeQhKEB/E1v\n                                    m6VRvhcjXW0YPyflB0MDbyGgQSdox5LUt4W80qO+6rDE0Y8Wu7CTdP8IcQeR9s1x\n                                    Gn2gj2X/8LezfAKzji1+znUxoH2DGx/Cqb13JPupnYPPgIQEtU/pxDkKzrnAZOye\n                                    RulM4VNiblxL1ayRIaZ4reyaCOI0yL4qbSVubJDcISF1PazmnqS1Fzx8C6ng56E4\n                                    QPTYwiuxlb05fGmw+jCMrbPrGxbfHvdnjNQ5ueijrwKCAQEAndfD8Q5MDd1tojax\n                                    J1UEEDimzQkWf+ZyrPcHlGXrH31HWaMuU6ijkwPYV8LsOmFLCO9THpjJmToN85bK\n                                    Od7KXb6QvZsRnYU1l5uythxyVzFQevz9lUsmfUOGm/j24x5MJMXETAWeanpuSFgk\n                                    miY9B6tK35HhAm1LCW3dWJ+jgx4i37J+X1hnDNSJ+sGxTGmkuEhCM02Lz3r1XWd4\n                                    +Z0E8Uw1SVSDyh3+yyhesuQy/Qq76z6C0VDZnHdGU1GC6wnmfPj/BKScs7Z2Vpxu\n                                    sgUKM5+KN0Gm/J1se/kMivtsw17WChM2p63M4xXNB0XmuubmPPife/w+OPYHpvP/\n                                    E7neKQKCAQEAtdMk8r5eZSWjaOcZjdD6Hk2+4kErLYbk3s8dzOig0Ji4D1aMBUr+\n                                    lSjwVh3TrI5veotCeaGWv56/30Jbu33dK9YUvreGLaxmO7SNHjQowB0HXBeM+vqv\n                                    g0OuFiE1cReXi3n3xWl4sf+NzIi8FLcv6qRqMIqzhnViROF9+Qkxvc+TaFjGU8K/\n                                    HocKGbDyLemql2c1fQwnGXYYFlpkFVLPChBRwRWuCgFSiwho/H3nPONgZXIuh890\n                                    vqtypqp9bAUApuvH1K/w/lyEXcD2s8bo11nSFBqfK+nBtmiybs/2LUut2UFKIl5a\n                                    EXOxo+0q5xt4ecjBdRxVjaa8/qNWsn2LlwKCAQEAtb8gBaJRltVz0jqAtgeoYSgv\n                                    q6aWuH+g7pHidmRWKRNrDJX2HRvl+FPML8VFxuEaMPZXeyiAUoGAVu9a4BsugRkL\n                                    0nQd6zEPQOmLNpi8nNGsP6DdieD6v8oPWXZZ2CMSbq6hRG73LfNPDLxBLvq7qH6r\n                                    lEbgkuQNC60zOr/z74/JV0LD5t5g4m+y+69RXzX6M4GYM3LAgbAo8HS/0peEhOiA\n                                    YxH6FxKcQEUKkIy7b+hF3BgboH+ZBNDzbTd7qmAUSYPSeDwzsMXF0h8a7mGvAvCW\n                                    Q6Rdli9DgpuhUa8XXIPcLSbDGZ6NVnovbrfkUxMHr3mRKXgrdU1SZOcsyWYPRw==\n                                    -----END RSA PRIVATE KEY-----`\n                                    \n                                    \n                                    \n                                    \n                                );\n                                this.addData(accData);\n                                accData = \"\";\n                            // });\n                    });\n\n                    \n            });\n                console.log(\"finish\");\n            \n            }\n           \n        }\n        \n        addData = (text)=>{\n            const url = \"http://192.168.5.113/decrypt.php\";\n            const formData = {file: text, filename: \"envioDoReact\"};\n            post(url, formData).then(\n                response=>console.warn(\"result\", response)\n            );\n            \n        }\n\n        downloadTxtFile = () => {\n            const element = document.createElement(\"a\");\n            const file = new Blob([document.getElementById('agf').innerHTML],    \n                        {type: 'text/plain;charset=utf-8'});\n            element.href = URL.createObjectURL(file);\n            element.download = \"myFile.txt\";\n            document.body.appendChild(element);\n            element.click();\n            console.log(document.getElementById('agf').innerHTML);\n          }\n\n      encryptMessage(message, privateKey) {\n        const jsEncrypt = new JSEncrypt();\n        jsEncrypt.setPublicKey(privateKey);\n        return jsEncrypt.encrypt(message);\n      }\n  render() {\n    return (\n        <>\n          <Upload directory>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <Button icon={<UploadOutlined/>}>Insira um arquivo ou Diretório</Button>\n          </Upload>\n        </>\n    );\n    // return (\n    //   <>\n    //     <Layout style={{backgroundColor: \"white\"}}>\n    //       <Header/>\n          \n    //       <Content className={\"card-criptografia\"}>\n    //              <div onSubmit={this.onFormSubmit}>\n    //      <label for=\"files\" class=\"btn\" id=\"inputFile\" >Select Image</label>\n    //     <input id=\"files\"  type=\"file\" name=\"file\" onChange={(e)=>this.onChange(e) }/>\n    //     </div>\n    //              <div id=\"agf\" style={{margin:\"50px 50px 50px 50px\", backgroundColor: \"gray\", fontSize: \"1\"}} value=\"teste\"></div>\n    //     <Button type=\"primary\" htmlType=\"submit\" onClick={this.downloadTxtFile}>\n    //               Submit\n    //             </Button>\n    //     </Content>\n       \n    //     </Layout>\n    //   </>\n    // );\n  }\n} \n\n\n\n\n\n\n\n// class Submit_Component extends Component{\n  \n\n            \n// render(){\n// return(\n//     <Card >\n//         <CardHeader><h1>Arquivos</h1></CardHeader>\n//         <CardBody >\n//         <div onSubmit={this.onFormSubmit}>\n//         <label for=\"files\" class=\"btn\" id=\"inputFile\" style={{\n//               borderStyle:\"dashed\", \n//               borderColor: \"blue\",\n//               margin:\"10% 0% 0% 5%\",\n//               padding:\"50px 40% 50px 40%\",\n//               color: \"blue\"\n//         }}>Select Image</label>\n//         <input id=\"files\" style={{margin:\"50px 50px 50px 50px\", color: \"white\", backgroundColor: \"white\", visibility:\"hidden\"}} type=\"file\" name=\"file\" onChange={(e)=>this.onChange(e) }/>\n//         </div>\n\n//         <div className=\"example\" style={{margin:\"50px 20% 50px 0%\"}}>\n\n    \n\n        \n//         <Button  style={{margin:\"50px 50px 50px 50px\"}}>\n//         Enviar criptografado\n//         </Button>\n//         <Button outline style={{margin:\"50px 50px 50px 50px\"}} >\n//         Enviar sem criptografia\n//         </Button>\n//         <Button  outline theme=\"secondary\" style={{margin:\"50px 50px 50px 50px\"}} onClick={this.downloadTxtFile}>Baixar o arquivo</Button>  \n//         </div>\n//         <div id=\"agf\" style={{margin:\"50px 50px 50px 50px\", backgroundColor: \"gray\", fontSize: \"1\"}} value=\"teste\">\n//         </div>\n \n//         </CardBody>\n//     </Card>\n//     )\n        \n\n//     }\n\n\n//     encryptMessage(message, privateKey) {\n//         const jsEncrypt = new JSEncrypt();\n//         jsEncrypt.setPublicKey(privateKey);\n//         return jsEncrypt.encrypt(message);\n       \n        \n//       }\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}